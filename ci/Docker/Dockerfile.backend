ARG IMAGE=node:16.10-alpine
ARG NODE_ENV=production

# -----Note-------#
# # # The build is commented out due to local build issue, this dockerfile is used after build in Github action
# FROM $IMAGE as build
# WORKDIR /usr/app

# COPY . .

# ENV NODE_ENV $NODE_ENV

# RUN npm install --quiet --no-progress -g nx && \
#     npm ci --quiet --no-progress && \
#     nx build dsb-client-gateway-api

FROM $IMAGE as deps

RUN apk add --no-cache python3 py3-pip make g++

COPY --chown=node:node dist/apps/dsb-client-gateway-api/package.json /usr/app/
COPY --chown=node:node package-lock.json /usr/app/

WORKDIR /usr/app
RUN npm ci --production


FROM $IMAGE

ARG NODE_ENV
ENV NODE_ENV=$NODE_ENV

COPY --chown=node:node dist/apps/dsb-client-gateway-api/* /usr/app/
COPY --chown=node:node ormconfig.js /usr/app/
COPY --chown=node:node migrations-build/ /usr/app/migrations-build
COPY --from=deps --chown=node:node /usr/app/node_modules /usr/app/node_modules
# version.md is expected to exist, CI will create the file
COPY --chown=node:node version.md /usr/app/

WORKDIR /usr/app

USER node

CMD ["node", "main.js"]
